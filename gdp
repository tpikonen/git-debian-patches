#!/bin/sh
set -e

patchdir="debian/patches"
metadir="debian/metapatches"
seriesfile="${patchdir}/series"
prefix="p/"
pext=".patch"
debbranch="master"
upbranch="upstream"

# Recreate patches from a git branch and metapatch files.
refresh ()
{
    dh_testdir
    echo -n '' > $seriesfile
    i=1
    for metafile in ${metadir}/*
    do
        patchname=$(basename $metafile)
        branch=$(sed -n 's/X-git-branch: *\(.*\)$/\1/p' $metafile)
        outfile=${patchdir}/${patchname}${pext}
        i=$(expr ${i} + 1)
        echo $outfile
        rm -f ${outfile}
        cat $metafile > $outfile
        echo "---" >> $outfile
        git diff -p --stat ${upbranch}..${branch} >> $outfile
        echo ${patchname}${pext} >> $seriesfile
    done
}


# tag-heads [$VERSION]
# Tag current git branch heads with the (debian) version.
# If $VERSION is not given, get it from debian/changelog.
# Tag for the debian branch (usually 'master') has the name debian/$VERSION,
# patch branch tags are tagged with the name $PATCHBRANCH/$VERSION
tagheads ()
{
    dh_testdir
    version=$1
    # FIXME: Check if the version string makes sense
    if [ -z ${version} ] && [ "${version+xxx}" = "xxx" ] ; then
        version=$(dpkg-parsechangelog | sed -n 's/^Version: \(.*\)$/\1/p')
    fi
    i=1
    for metafile in ${metadir}/*
    do
        branch=$(sed -n 's/X-git-branch: *\(.*\)$/\1/p' $metafile)
        echo "Tagging ${branch} with ${branch}/${version}"
        git tag ${branch}/${version} ${branch}
    done
    echo "Tagging ${debbranch} with debian/${version}"
    git tag debian/${version} ${debbranch}
}


# import-orig tarballname
# Import the tarball to $debbranch and pristine-tar branches,
# but do not merge the to master
importorig ()
{
    dh_testdir
    tball=$1
    git import-orig --no-merge --pristine-tar --upstream-branch=${upbranch} ${tball}
}


PROGNAME=$(basename $0)
case $1 in
    refresh)
        shift ; refresh ;;
    tag-heads)
        shift ; tagheads $@ ;;
    import-orig)
        shift ; importorig $@ ;;
    *)
        echo "$PROGNAME: Error: Unknown subcommand." >&2
        exit 1 ;;
esac
